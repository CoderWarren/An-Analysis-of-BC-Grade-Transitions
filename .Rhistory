ML_school_data$`PARTIME Educators CNT` <- strtoi(ML_school_data$`PARTIME Educators CNT`)
# Chunk 8: plot-prep1
province_plot <- data_province %>%  # Code for the plot
plot_ly(x = ~year,
y=~rate,
type="scatter",
mode="line",
customdata = ~SUB_POPULATION,
ids = ~PUBLIC_OR_INDEPENDENT,
color=~grade,
colors="Set2",
hoverinfo = 'text',
text = ~paste('</br> Year: ', year,
'</br> Grade: ', grade,
'</br> Transition Rate: ', rate),
transforms=list(
list(
type = 'filter',
target = 'customdata',
operation = '=',
value = unique(data_province$SUB_POPULATION)[1]
),
list(
type = 'filter',
target = 'ids',
operation = '=',
value = unique(data_province$PUBLIC_OR_INDEPENDENT)[1]
)
)
) %>% # The dropdown menu for SUBPOPULATION
layout(
title="OVerall Rate of Successful Grade Transitions (1993-2020)",
yaxis = list(title = "% of Students who Transitioned to the Next Grade",
range = c(40,100)),
xaxis=list(title="Year",
categoryorder = "array",
categoryarray = data_province$year),
legend = list(title=list(text='<b> Student Grade Level </b>')),
updatemenus = list(
list(
x=1,
y = 0.1,
type = 'dropdown',
direction="up",
active = 0,
buttons=list(
list(method = "restyle",
args = list("transforms[0].value", unique(data_province$SUB_POPULATION)[1]),
label = unique(data_province$SUB_POPULATION)[1]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_province$SUB_POPULATION)[2]),
label = unique(data_province$SUB_POPULATION)[2]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_province$SUB_POPULATION)[3]),
label = unique(data_province$SUB_POPULATION)[3]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_province$SUB_POPULATION)[4]),
label = unique(data_province$SUB_POPULATION)[4]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_province$SUB_POPULATION)[5]),
label = unique(data_province$SUB_POPULATION)[5])
)
),
list(
x=1,
y = 0.2,
type = 'dropdown',
direction="up",
active = 0,
buttons=list(
list(method = "restyle",
args = list("transforms[1].value", unique(data_province$PUBLIC_OR_INDEPENDENT)[1]),
label = unique(data_province$PUBLIC_OR_INDEPENDENT)[1]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_province$PUBLIC_OR_INDEPENDENT)[2]),
label = unique(data_province$PUBLIC_OR_INDEPENDENT)[2]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_province$PUBLIC_OR_INDEPENDENT)[3]),
label = unique(data_province$PUBLIC_OR_INDEPENDENT)[3])
)
)
))
# Had a lot of trouble creating this plot, but this link helped:
# https://stackoverflow.com/questions/52321695/filter-a-plotly-line-chart-based-on-categorical-variable
# Chunk 9: plot1
province_plot
# Chunk 10: heatmap_func
# A function to make our heatmap matrixes much more easily
gen_heatmap_mat <- function(gr, sub_pop="All Students"){
data_district %>%
filter(SUB_POPULATION==sub_pop) %>%
filter(grade == gr) %>%
select(DISTRICT_NAME, year, rate) %>%
mutate(DISTRICT_NAME = as.factor(DISTRICT_NAME)) -> district_mat
district_mat2 <- as.data.frame(pivot_wider(district_mat,
names_from=DISTRICT_NAME,
values_from = rate))
district_mat2 %>%
column_to_rownames("year") %>%
as.matrix()
}
# Chunk 11: plot-2
# Generate our text labels
# The actual
plot_ly(x=colnames(gen_heatmap_mat(1)),
y=rownames(gen_heatmap_mat(1)),
type="heatmap",
zmin=20,
zmax=100,
showscale=FALSE) %>%
add_trace(z=gen_heatmap_mat(1), visible=TRUE, coloraxis = 'coloraxis', name="Grade 1") %>%
add_trace(z=gen_heatmap_mat(2), visible=FALSE, coloraxis = 'coloraxis', name="Grade 2") %>%
add_trace(z=gen_heatmap_mat(3), visible=FALSE, coloraxis = 'coloraxis', name="Grade 3") %>%
add_trace(z=gen_heatmap_mat(4), visible=FALSE, coloraxis = 'coloraxis', name="Grade 4") %>%
add_trace(z=gen_heatmap_mat(5), visible=FALSE, coloraxis = 'coloraxis', name="Grade 5") %>%
add_trace(z=gen_heatmap_mat(6), visible=FALSE, coloraxis = 'coloraxis', name="Grade 6") %>%
add_trace(z=gen_heatmap_mat(7), visible=FALSE, coloraxis = 'coloraxis', name="Grade 7") %>%
add_trace(z=gen_heatmap_mat(8), visible=FALSE, coloraxis = 'coloraxis', name="Grade 8") %>%
add_trace(z=gen_heatmap_mat(9), visible=FALSE, coloraxis = 'coloraxis', name="Grade 9") %>%
add_trace(z=gen_heatmap_mat(10), visible=FALSE, coloraxis = 'coloraxis', name="Grade 10") %>%
add_trace(z=gen_heatmap_mat(11), visible=FALSE, coloraxis = 'coloraxis', name="Grade 11") %>%
add_trace(z=gen_heatmap_mat(1, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 1 (NSN)") %>%
add_trace(z=gen_heatmap_mat(2, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 2 (NSN)") %>%
add_trace(z=gen_heatmap_mat(3, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 3 (NSN)") %>%
add_trace(z=gen_heatmap_mat(4, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 4 (NSN)") %>%
add_trace(z=gen_heatmap_mat(5, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 5 (NSN)") %>%
add_trace(z=gen_heatmap_mat(6, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 6 (NSN)") %>%
add_trace(z=gen_heatmap_mat(7, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 7 (NSN)") %>%
add_trace(z=gen_heatmap_mat(8, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 8 (NSN)") %>%
add_trace(z=gen_heatmap_mat(9, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 9 (NSN)") %>%
add_trace(z=gen_heatmap_mat(10, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 10 (NSN)") %>%
add_trace(z=gen_heatmap_mat(11, "Non Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 11 (NSN)") %>%
add_trace(z=gen_heatmap_mat(1, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 1 (SN)") %>%
add_trace(z=gen_heatmap_mat(2, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 2 (SN)") %>%
add_trace(z=gen_heatmap_mat(3, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 3 (SN)") %>%
add_trace(z=gen_heatmap_mat(4, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 4 (SN)") %>%
add_trace(z=gen_heatmap_mat(5, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 5 (SN)") %>%
add_trace(z=gen_heatmap_mat(6, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 6 (SN)") %>%
add_trace(z=gen_heatmap_mat(7, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 7 (SN)") %>%
add_trace(z=gen_heatmap_mat(8, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 8 (SN)") %>%
add_trace(z=gen_heatmap_mat(9, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 9 (SN)") %>%
add_trace(z=gen_heatmap_mat(10, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 10 (SN)") %>%
add_trace(z=gen_heatmap_mat(11, "Special Needs"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 11 (SN)") %>%
add_trace(z=gen_heatmap_mat(1, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 1 (NI)") %>%
add_trace(z=gen_heatmap_mat(2, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 2 (NI)") %>%
add_trace(z=gen_heatmap_mat(3, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 3 (NI)") %>%
add_trace(z=gen_heatmap_mat(4, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 4 (NI)") %>%
add_trace(z=gen_heatmap_mat(5, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 5 (NI)") %>%
add_trace(z=gen_heatmap_mat(6, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 6 (NI)") %>%
add_trace(z=gen_heatmap_mat(7, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 7 (NI)") %>%
add_trace(z=gen_heatmap_mat(8, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 8 (NI)") %>%
add_trace(z=gen_heatmap_mat(9, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 9 (NI)") %>%
add_trace(z=gen_heatmap_mat(10, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 10 (NI)") %>%
add_trace(z=gen_heatmap_mat(11, "Non Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 11 (NI)") %>%
add_trace(z=gen_heatmap_mat(1, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 1 (I)") %>%
add_trace(z=gen_heatmap_mat(2, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 2 (I)") %>%
add_trace(z=gen_heatmap_mat(3, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 3 (I)") %>%
add_trace(z=gen_heatmap_mat(4, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 4 (I)") %>%
add_trace(z=gen_heatmap_mat(5, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 5 (I)") %>%
add_trace(z=gen_heatmap_mat(6, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 6 (I)") %>%
add_trace(z=gen_heatmap_mat(7, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 7 (I)") %>%
add_trace(z=gen_heatmap_mat(8, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 8 (I)") %>%
add_trace(z=gen_heatmap_mat(9, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 9 (I)") %>%
add_trace(z=gen_heatmap_mat(10, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 10 (I)") %>%
add_trace(z=gen_heatmap_mat(11, "Indigenous"), visible=FALSE, coloraxis = 'coloraxis', name="Grade 11 (I)") %>%
layout(
coloraxis=list(title = "<b>Rate of Transitions</b>",
colorscale='Viridis',
cmax=100,
cmin=20,
reversescale =T),
annotations = list(text = "<b> Transition rate (%): </b>",  x = 1.2, xref="paper",
y = 1.1, yref="paper", showarrow=FALSE ),
title="Rate of Successful Grade Transitions for Different Districts (1993-2020)",
xaxis = list(title = "<b>District</b>",
tickmode='linear'),
yaxis=list(title="<b>Year</b>"),
updatemenus = list(
list(
x= 0,
y = 1.3,
type = 'dropdown',
direction="down",
active = 0,
buttons=list(
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 1), TRUE, rep(FALSE, 53)))),
label = "Grade 1"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 12), TRUE, rep(FALSE, 42)))),
label = "Grade 1 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 23), TRUE, rep(FALSE, 31)))),
label = "Grade 1 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 34), TRUE, rep(FALSE, 21)))),
label = "Grade 1 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 35), TRUE, rep(FALSE, 10)))),
label = "Grade 1 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 2), TRUE, rep(FALSE, 52)))),
label = "Grade 2"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 13), TRUE, rep(FALSE, 41)))),
label = "Grade 2 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 24), TRUE, rep(FALSE, 30)))),
label = "Grade 2 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 35), TRUE, rep(FALSE, 19)))),
label = "Grade 2 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 46), TRUE, rep(FALSE, 8)))),
label = "Grade 2 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 3), TRUE, rep(FALSE, 51)))),
label = "Grade 3"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 14), TRUE, rep(FALSE, 40)))),
label = "Grade 3 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 25), TRUE, rep(FALSE, 29)))),
label = "Grade 3 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 36), TRUE, rep(FALSE, 18)))),
label = "Grade 3 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 47), TRUE, rep(FALSE, 7)))),
label = "Grade 3 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 4), TRUE, rep(FALSE, 50)))),
label = "Grade 4"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 15), TRUE, rep(FALSE, 39)))),
label = "Grade 4 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 26), TRUE, rep(FALSE, 28)))),
label = "Grade 4 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 37), TRUE, rep(FALSE, 17)))),
label = "Grade 4 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 48), TRUE, rep(FALSE, 6)))),
label = "Grade 4 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 5), TRUE, rep(FALSE, 49)))),
label = "Grade 5"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 16), TRUE, rep(FALSE, 38)))),
label = "Grade 5 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 27), TRUE, rep(FALSE, 27)))),
label = "Grade 5 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 38), TRUE, rep(FALSE, 16)))),
label = "Grade 5 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 49), TRUE, rep(FALSE, 5)))),
label = "Grade 5 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 6), TRUE, rep(FALSE, 48)))),
label = "Grade 6"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 17), TRUE, rep(FALSE, 37)))),
label = "Grade 6 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 28), TRUE, rep(FALSE, 26)))),
label = "Grade 6 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 39), TRUE, rep(FALSE, 15)))),
label = "Grade 6 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 50), TRUE, rep(FALSE, 4)))),
label = "Grade 6 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 7), TRUE, rep(FALSE, 47)))),
label = "Grade 7"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 18), TRUE, rep(FALSE, 36)))),
label = "Grade 7 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 29), TRUE, rep(FALSE, 25)))),
label = "Grade 7 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 40), TRUE, rep(FALSE, 14)))),
label = "Grade 7 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 51), TRUE, rep(FALSE, 3)))),
label = "Grade 7 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 8), TRUE, rep(FALSE, 46)))),
label = "Grade 8"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 19), TRUE, rep(FALSE, 35)))),
label = "Grade 8 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 30), TRUE, rep(FALSE, 24)))),
label = "Grade 8 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 41), TRUE, rep(FALSE, 13)))),
label = "Grade 8 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 52), TRUE, rep(FALSE, 2)))),
label = "Grade 8 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 9), TRUE, rep(FALSE, 45)))),
label = "Grade 9"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 20), TRUE, rep(FALSE, 34)))),
label = "Grade 9 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 31), TRUE, rep(FALSE, 40)))),
label = "Grade 9 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 42), TRUE, rep(FALSE, 12)))),
label = "Grade 9 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 53), TRUE, rep(FALSE, 1)))),
label = "Grade 9 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 10), TRUE, rep(FALSE, 44)))),
label = "Grade 10"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 21), TRUE, rep(FALSE, 33)))),
label = "Grade 10 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 32), TRUE, rep(FALSE, 22)))),
label = "Grade 10 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 43), TRUE, rep(FALSE, 11)))),
label = "Grade 10 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 54), TRUE, rep(FALSE, 0)))),
label = "Grade 10 (I)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 11), TRUE, rep(FALSE, 43)))),
label = "Grade 11"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 22), TRUE, rep(FALSE, 32)))),
label = "Grade 11 (NSN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 33), TRUE, rep(FALSE, 21)))),
label = "Grade 11 (SN)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 44), TRUE, rep(FALSE, 10)))),
label = "Grade 11 (NI)"),
list(method = "restyle",
args = list("visible", as.list(c(rep(FALSE, 0), TRUE, rep(FALSE, 54)))),
label = "Grade 11 (I)")
))))
# Chunk 12: plot-prep3
district_plot_2 <- data_district %>%
mutate(year=as.factor(year)) %>%
plot_ly(
y=~rate,
color=~year,
type="box",
customdata=~SUB_POPULATION,
ids=~grade,
transforms=list(
list(
type = 'filter',
target = 'customdata',
operation = '=',
value = unique(data_district$SUB_POPULATION)[1]
),
list(
type = 'filter',
target = 'ids',
operation = '=',
value = unique(data_district$grade)[1]
)
)
) %>% # The dropdown menu for SUBPOPULATION
layout(
title="Rate of Successful Grade Transitions for Different Districts (1993-2020)",
yaxis = list(title = "% of Students who Transitioned to the Next Grade",
range = c(20,100)),
xaxis=list(title="Year",
categoryorder = "array",
categoryarray = data_province$year),
annotations = list(text = "<b> Grade: </b>",  x = 0.9, xref="paper",
y = 0.13, yref="paper", showarrow=FALSE ),
showlegend = FALSE,
updatemenus = list(
list(
x=1,
y = 0.1,
type = 'dropdown',
direction="up",
active = 0,
buttons=list(
list(method = "restyle",
args = list("transforms[0].value", unique(data_district$SUB_POPULATION)[1]),
label = unique(data_district$SUB_POPULATION)[1]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_district$SUB_POPULATION)[2]),
label = unique(data_district$SUB_POPULATION)[2]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_district$SUB_POPULATION)[3]),
label = unique(data_district$SUB_POPULATION)[3]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_district$SUB_POPULATION)[4]),
label = unique(data_district$SUB_POPULATION)[4]),
list(method = "restyle",
args = list("transforms[0].value", unique(data_district$SUB_POPULATION)[5]),
label = unique(data_district$SUB_POPULATION)[5])
)
),
list(
x=1,
y = 0.2,
type = 'dropdown',
direction="up",
active = 0,
buttons=list(
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[1]),
label = unique(data_district$grade)[1]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[2]),
label = unique(data_district$grade)[2]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[3]),
label = unique(data_district$grade)[3]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[4]),
label = unique(data_district$grade)[4]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[5]),
label = unique(data_district$grade)[5]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[6]),
label = unique(data_district$grade)[6]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[7]),
label = unique(data_district$grade)[7]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[8]),
label = unique(data_district$grade)[8]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[9]),
label = unique(data_district$grade)[9]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[10]),
label = unique(data_district$grade)[10]),
list(method = "restyle",
args = list("transforms[1].value", unique(data_district$grade)[11]),
label = unique(data_district$grade)[11])
)
)
))
# Chunk 13: plot3
district_plot_2
# Chunk 18: school_level_plot
ML_school_data %>%
mutate(yrgr = paste0("YEAR: ", ML_school_data$year,
" GRADE: ", ML_school_data$grade)) %>%
filter(year<2017) -> ML_school_data
my_buttons <- list()
for(i in 1:length(unique(ML_school_data$yrgr))){
my_buttons[[i]] <- list(method="restyle",
args = list("transforms[0].value", unique(ML_school_data$yrgr)[i]),
label = unique(ML_school_data$yrgr)[i]
)
}
ML_school_data %>%
filter(SUB_POPULATION=="All Students") %>%
plot_ly(x=~`FULLTIME Educators CNT`,
y=~AVG_CLASS_SIZE_GRADE_GROUP,
type="scatter",
text = ~paste('</br> Year: ', year,
'</br> District Number: ', district,
'</br> District Name: ', DISTRICT_NAME,
'</br> School: ', SCHOOL_NAME,
'</br> Grade: ', grade,
'</br> Number of Full Time Educators: ', `FULLTIME Educators CNT`,
'</br> Average Class Size: ', AVG_CLASS_SIZE_GRADE_GROUP,
'</br> Transition Rate: ', rate),
hoverinfo = "text",
mode="markers",
customdata=~yrgr,
size=20,
marker = list(opacity=0.5,
color=~rate,
colorbar = list(title = "<b>Transition Rates (%)</b>"),
colorscale='Viridis',
showscale = TRUE,
reversescale =TRUE,
cmin=40,
cmax=100),
transforms=list(
list(
type = 'filter',
target = 'customdata',
operation = '=',
value = unique(ML_school_data$yrgr)[1]
)
)) %>%
layout(
title="<b>Grade Transition Rates at a School Level",
yaxis = list(title = "Average Class Size for corresponding Grade Group"),
xaxis=list(title="Number of Full Time Educators in District"),
updatemenus = list(
list(
x=1,
y = 0.1,
type = 'dropdown',
direction="up",
active = 0,
buttons=my_buttons)))
